complete docker-compose.yml script that sets up Node Exporter, Prometheus, and Grafana together. This configuration ensures that:

Node Exporter collects system metrics.
Prometheus scrapes the metrics from Node Exporter.
Grafana connects to Prometheus to visualize the metrics.



vi docker-compose.yml

{version: '3'

services:
  # Node Exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"  # Node Exporter exposes metrics on port 9100
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 200M

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mount the custom Prometheus configuration
    ports:
      - "9090:9090"  # Prometheus web UI on port 9090
    networks:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - node-exporter
    deploy:
      resources:
        limits:
          memory: 500M

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana UI on port 3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=your_password  # Set your Grafana admin password
    networks:
      - monitoring
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 500M

networks:
  monitoring:
    driver: bridge}










prometheus.yml Configuration File
You will need a custom prometheus.yml file for Prometheus to scrape the Node Exporter service. Create a prometheus.yml file in the same directory as your docker-compose.yml file with the following content:



vi prometheus.yml



{global:
  scrape_interval: 15s  # How often to scrape targets

scrape_configs:
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['node-exporter:9100']  # Prometheus scrapes metrics from Node Exporter}



Steps to Run:
Create a directory for your project, e.g. monitoring, and navigate into it:

bash:
mkdir monitoring && cd monitoring


bash:
docker-compose up -d

Accessing the Services:
Node Exporter: http://<your-server-ip>:9100/metrics

Prometheus: http://<your-server-ip>:9090

Grafana: http://<your-server-ip>:3000

Login to Grafana using the default credentials (admin / your_password), then configure Prometheus as a data source in Grafana (URL: http://prometheus:9090).

Now you have Node Exporter, Prometheus, and Grafana running together, collecting system metrics and visualizing them.


